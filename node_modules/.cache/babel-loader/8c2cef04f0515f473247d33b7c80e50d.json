{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Santosh\\\\Desktop\\\\facerecognition\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Particles from \"react-particles-js\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport Clarifai from \"clarifai\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nconst app = new Clarifai.App({\n  apiKey: \"96c74560bc984068b576ce2b7afe7545\"\n});\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 160,\n      density: {\n        enable: false\n      }\n    },\n    size: {\n      value: 3,\n      random: true,\n      anim: {\n        speed: 4,\n        size_min: 0.3\n      }\n    },\n    line_linked: {\n      enable: false\n    },\n    move: {\n      random: true,\n      speed: 1,\n      direction: \"top\",\n      direction: \"bottom\",\n      out_mode: \"out\"\n    }\n  },\n  interactivity: {\n    events: {\n      onclick: {\n        enable: true,\n        mode: \"repulse\"\n      }\n    },\n    modes: {\n      bubble: {\n        distance: 250,\n        duration: 2,\n        size: 0,\n        opacity: 0\n      },\n      repulse: {\n        distance: 400,\n        duration: 4\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const NumberOfFaces = data.outputs[0].data.regions.length;\n      document.getElementById(\"no\").innerHTML = \"Number of faces detected : \" + NumberOfFaces;\n      const face = data.outputs[0].data.regions[5].region_info.bounding_box;\n      const image = document.getElementById(\"inputImage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: face.left_col * width,\n        topRow: face.top_row * height,\n        rightCol: width - face.right_col * width,\n        bottomRow: height - face.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      //console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))\n      /*console.log(response)*/\n      ).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: \"\",\n      imageURL: \"\",\n      box: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageURL: this.state.imageURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\Users\\Santosh\\Desktop\\facerecognition\\src\\App.js"],"names":["React","Component","Particles","Navigation","Logo","Clarifai","ImageLinkForm","FaceRecognition","app","App","apiKey","particleOptions","particles","number","value","density","enable","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onclick","mode","modes","bubble","distance","duration","opacity","repulse","constructor","calculateFaceLocation","data","NumberOfFaces","outputs","regions","length","document","getElementById","innerHTML","face","region_info","bounding_box","image","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","onButtonSubmit","imageURL","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AAEA,MAAMC,GAAG,GAAG,IAAIH,QAAQ,CAACI,GAAb,CAAiB;AAC3BC,EAAAA,MAAM,EAAE;AADmB,CAAjB,CAAZ;AAIA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,GADD;AAENC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD;AAFH,KADC;AAOTC,IAAAA,IAAI,EAAE;AACJH,MAAAA,KAAK,EAAE,CADH;AAEJI,MAAAA,MAAM,EAAE,IAFJ;AAGJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,CADH;AAEJC,QAAAA,QAAQ,EAAE;AAFN;AAHF,KAPG;AAeTC,IAAAA,WAAW,EAAE;AACXN,MAAAA,MAAM,EAAE;AADG,KAfJ;AAkBTO,IAAAA,IAAI,EAAE;AACJL,MAAAA,MAAM,EAAE,IADJ;AAEJE,MAAAA,KAAK,EAAE,CAFH;AAGJI,MAAAA,SAAS,EAAE,KAHP;AAIJA,MAAAA,SAAS,EAAE,QAJP;AAKJC,MAAAA,QAAQ,EAAE;AALN;AAlBG,GADW;AA2BtBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AACPZ,QAAAA,MAAM,EAAE,IADD;AAEPa,QAAAA,IAAI,EAAE;AAFC;AADH,KADK;AAObC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE,GADJ;AAENC,QAAAA,QAAQ,EAAE,CAFJ;AAGNhB,QAAAA,IAAI,EAAE,CAHA;AAINiB,QAAAA,OAAO,EAAE;AAJH,OADH;AAOLC,MAAAA,OAAO,EAAE;AACPH,QAAAA,QAAQ,EAAE,GADH;AAEPC,QAAAA,QAAQ,EAAE;AAFH;AAPJ;AAPM;AA3BO,CAAxB;;AAgDA,MAAMxB,GAAN,SAAkBR,SAAlB,CAA4B;AAC1BmC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,qBARc,GAQUC,IAAI,IAAI;AAC9B,YAAMC,aAAa,GAAGD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBF,IAAhB,CAAqBG,OAArB,CAA6BC,MAAnD;AACAC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,SAA9B,GACE,gCAAgCN,aADlC;AAEA,YAAMO,IAAI,GAAGR,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBF,IAAhB,CAAqBG,OAArB,CAA6B,CAA7B,EAAgCM,WAAhC,CAA4CC,YAAzD;AACA,YAAMC,KAAK,GAAGN,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;AACA,YAAMM,KAAK,GAAGC,MAAM,CAACF,KAAK,CAACC,KAAP,CAApB;AACA,YAAME,MAAM,GAAGD,MAAM,CAACF,KAAK,CAACG,MAAP,CAArB;AACA,aAAO;AACLC,QAAAA,OAAO,EAAEP,IAAI,CAACQ,QAAL,GAAgBJ,KADpB;AAELK,QAAAA,MAAM,EAAET,IAAI,CAACU,OAAL,GAAeJ,MAFlB;AAGLK,QAAAA,QAAQ,EAAEP,KAAK,GAAGJ,IAAI,CAACY,SAAL,GAAiBR,KAH9B;AAILS,QAAAA,SAAS,EAAEP,MAAM,GAAGN,IAAI,CAACc,UAAL,GAAkBR;AAJjC,OAAP;AAMD,KAtBa;;AAAA,SAwBdS,cAxBc,GAwBGC,GAAG,IAAI;AACtB;AACA,WAAKC,QAAL,CAAc;AAAED,QAAAA,GAAG,EAAEA;AAAP,OAAd;AACD,KA3Ba;;AAAA,SA6BdE,aA7Bc,GA6BEC,KAAK,IAAI;AACvB,WAAKF,QAAL,CAAc;AAAEG,QAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAarD;AAAtB,OAAd;AACD,KA/Ba;;AAAA,SAiCdsD,cAjCc,GAiCG,MAAM;AACrB,WAAKL,QAAL,CAAc;AAAEM,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWJ;AAAvB,OAAd;AACA1D,MAAAA,GAAG,CAAC+D,MAAJ,CACGC,OADH,CACWnE,QAAQ,CAACoE,iBADpB,EACuC,KAAKH,KAAL,CAAWJ,KADlD,EAEGQ,IAFH,CAGIC,QAAQ,IAAI,KAAKd,cAAL,CAAoB,KAAKxB,qBAAL,CAA2BsC,QAA3B,CAApB;AACZ;AAJJ,QAMGC,KANH,CAMSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANhB;AAOD,KA1Ca;;AAEZ,SAAKP,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE,EADI;AAEXG,MAAAA,QAAQ,EAAE,EAFC;AAGXP,MAAAA,GAAG,EAAE;AAHM,KAAb;AAKD;;AAqCDkB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAiC,MAAA,MAAM,EAAErE,eAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,aAAD;AACE,MAAA,aAAa,EAAE,KAAKqD,aADtB;AAEE,MAAA,cAAc,EAAE,KAAKI,cAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAQE,oBAAC,eAAD;AAAiB,MAAA,GAAG,EAAE,KAAKE,KAAL,CAAWR,GAAjC;AAAsC,MAAA,QAAQ,EAAE,KAAKQ,KAAL,CAAWD,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAYD;;AA1DyB;;AA4D5B,eAAe5D,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Particles from \"react-particles-js\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport Clarifai from \"clarifai\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\n\nconst app = new Clarifai.App({\n  apiKey: \"96c74560bc984068b576ce2b7afe7545\"\n});\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 160,\n      density: {\n        enable: false\n      }\n    },\n    size: {\n      value: 3,\n      random: true,\n      anim: {\n        speed: 4,\n        size_min: 0.3\n      }\n    },\n    line_linked: {\n      enable: false\n    },\n    move: {\n      random: true,\n      speed: 1,\n      direction: \"top\",\n      direction: \"bottom\",\n      out_mode: \"out\"\n    }\n  },\n  interactivity: {\n    events: {\n      onclick: {\n        enable: true,\n        mode: \"repulse\"\n      }\n    },\n    modes: {\n      bubble: {\n        distance: 250,\n        duration: 2,\n        size: 0,\n        opacity: 0\n      },\n      repulse: {\n        distance: 400,\n        duration: 4\n      }\n    }\n  }\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageURL: \"\",\n      box: {}\n    };\n  }\n  calculateFaceLocation = data => {\n    const NumberOfFaces = data.outputs[0].data.regions.length;\n    document.getElementById(\"no\").innerHTML =\n      \"Number of faces detected : \" + NumberOfFaces;\n    const face = data.outputs[0].data.regions[5].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: face.left_col * width,\n      topRow: face.top_row * height,\n      rightCol: width - face.right_col * width,\n      bottomRow: height - face.bottom_row * height\n    };\n  };\n\n  displayFaceBox = box => {\n    //console.log(box);\n    this.setState({ box: box });\n  };\n\n  onInputChange = event => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ imageURL: this.state.input });\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(\n        response => this.displayFaceBox(this.calculateFaceLocation(response))\n        /*console.log(response)*/\n      )\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particleOptions} />\n        <Navigation />\n        <Logo />\n        <ImageLinkForm\n          onInputChange={this.onInputChange}\n          onButtonSubmit={this.onButtonSubmit}\n        />\n        <FaceRecognition box={this.state.box} imageURL={this.state.imageURL} />\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}