{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Santosh\\\\Desktop\\\\facerecognition\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Particles from \"react-particles-js\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport Clarifai from \"clarifai\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nconst app = new Clarifai.App({\n  apiKey: \"96c74560bc984068b576ce2b7afe7545\"\n});\nconst particleOptions = {\n  particles: {\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"black\",\n        blur: 6\n      },\n      density: {\n        enable: true,\n        density: 50\n      },\n      number: {\n        value: 5\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      var i;\n      const NumberOfFaces = data.outputs[0].data.regions.length; //alert(\"Number of faces detected : \" + NumberOfFaces);\n\n      for (i = 0; i < NumberOfFaces; i++) {\n        const face = data.outputs[0].data.regions[i].region_info.bounding_box;\n        const image = document.getElementById(\"inputImage\");\n        const width = Number(image.width);\n        const height = Number(image.height);\n        return {\n          leftCol: face.left_col * width,\n          topRow: face.top_row * height,\n          rightCol: width - face.right_col * width,\n          bottomRow: height - face.bottom_row * height\n        };\n      }\n    };\n\n    this.displayFaceBox = box => {\n      //console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response)) //console.log(response)*/\n      ).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: \"\",\n      imageURL: \"\",\n      box: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageURL: this.state.imageURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\Users\\Santosh\\Desktop\\facerecognition\\src\\App.js"],"names":["React","Component","Particles","Navigation","Logo","Clarifai","ImageLinkForm","FaceRecognition","app","App","apiKey","particleOptions","particles","line_linked","shadow","enable","color","blur","density","number","value","constructor","calculateFaceLocation","data","i","NumberOfFaces","outputs","regions","length","face","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","onButtonSubmit","imageURL","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Particles from \"react-particles-js\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport Clarifai from \"clarifai\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\n\nconst app = new Clarifai.App({\n  apiKey: \"96c74560bc984068b576ce2b7afe7545\"\n});\n\nconst particleOptions = {\n  particles: {\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"black\",\n        blur: 6\n      },\n      density: {\n        enable: true,\n        density: 50\n      },\n      number: {\n        value: 5\n      }\n    }\n  }\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageURL: \"\",\n      box: {}\n    };\n  }\n  calculateFaceLocation = data => {\n    var i;\n    const NumberOfFaces = data.outputs[0].data.regions.length;\n    //alert(\"Number of faces detected : \" + NumberOfFaces);\n    for (i = 0; i < NumberOfFaces; i++) {\n      const face = data.outputs[0].data.regions[i].region_info.bounding_box;\n      const image = document.getElementById(\"inputImage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: face.left_col * width,\n        topRow: face.top_row * height,\n        rightCol: width - face.right_col * width,\n        bottomRow: height - face.bottom_row * height\n      };\n    }\n  };\n\n  displayFaceBox = box => {\n    //console.log(box);\n    this.setState({ box: box });\n  };\n\n  onInputChange = event => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ imageURL: this.state.input });\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(\n        response => this.displayFaceBox(this.calculateFaceLocation(response))\n        //console.log(response)*/\n      )\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particleOptions} />\n        <Navigation />\n        <Logo />\n        <ImageLinkForm\n          onInputChange={this.onInputChange}\n          onButtonSubmit={this.onButtonSubmit}\n        />\n        <FaceRecognition box={this.state.box} imageURL={this.state.imageURL} />\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}